package me.accessmodifier364.leuxbackdoor.client.modules.exploit;

import me.accessmodifier364.leuxbackdoor.client.event.events.EventPacket;
import me.accessmodifier364.leuxbackdoor.client.guiscreen.settings.Setting;
import me.accessmodifier364.leuxbackdoor.client.modules.Category;
import me.accessmodifier364.leuxbackdoor.client.modules.Module;
import me.accessmodifier364.leuxbackdoor.client.util.EntityUtil;
import me.accessmodifier364.leuxbackdoor.loader.ModLoader;
import me.zero.alpine.fork.listener.EventHandler;
import me.zero.alpine.fork.listener.Listener;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Items;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.RayTraceResult;
import net.minecraft.util.math.Vec3d;
import net.minecraft.world.World;

public class NoFall extends Module {
    public NoFall() {
        super(Category.exploit);
        this.name = "NoFall";
        this.description = "MrCoffee404";
    }
    Setting packet = create("Packet", "NoFallPacket", true);
    Setting bucket = create("Bucket", "NoFallBucket", true);
    Setting distance = create("Distance", "NoFallDistance", 15, 0, 100);
    private long last = 0L;

    @EventHandler
    public Listener<EventPacket.SendPacket> sendListener = new Listener<EventPacket.SendPacket>(event -> {
        if (ModLoader.get_module_manager().get_module_with_tag("ElytraFly").is_active()) {
            return;
        }
        if (event.get_packet() instanceof CPacketPlayer && this.packet.get_value(true)) {
            ((CPacketPlayer)event.get_packet()).onGround = true;
        }
    });

    @Override
    public void update() {
        Vec3d posVec;
        RayTraceResult result;
        if (ModLoader.get_module_manager().get_module_with_tag("ElytraFly").is_active()) {
            return;
        }
        if (this.bucket.get_value(true) && NoFall.mc.player.fallDistance >= (float)this.distance.get_value(15) && !EntityUtil.isLiving((Entity) NoFall.mc.player) && System.currentTimeMillis() - this.last > 100L && (result = NoFall.mc.world.rayTraceBlocks(posVec = NoFall.mc.player.getPositionVector(), posVec.add(0.0, (double)-5.33f, 0.0), true, true, false)) != null && result.typeOfHit == RayTraceResult.Type.BLOCK) {
            EnumHand hand = EnumHand.MAIN_HAND;
            if (NoFall.mc.player.getHeldItemOffhand().getItem() == Items.WATER_BUCKET) {
                hand = EnumHand.OFF_HAND;
            } else if (NoFall.mc.player.getHeldItemMainhand().getItem() != Items.WATER_BUCKET) {
                for (int i = 0; i < 9; ++i) {
                    if (NoFall.mc.player.inventory.getStackInSlot(i).getItem() != Items.WATER_BUCKET) continue;
                    NoFall.mc.player.inventory.currentItem = i;
                    NoFall.mc.player.rotationPitch = 90.0f;
                    this.last = System.currentTimeMillis();
                    return;
                }
                return;
            }
            NoFall.mc.player.rotationPitch = 90.0f;
            NoFall.mc.playerController.processRightClick((EntityPlayer) NoFall.mc.player, (World) NoFall.mc.world, hand);
            this.last = System.currentTimeMillis();
        }
    }
}